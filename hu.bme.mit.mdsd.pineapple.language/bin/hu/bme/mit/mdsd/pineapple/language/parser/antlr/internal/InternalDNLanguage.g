/*
* generated by Xtext
*/
grammar InternalDNLanguage;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package hu.bme.mit.mdsd.pineapple.language.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package hu.bme.mit.mdsd.pineapple.language.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import hu.bme.mit.mdsd.pineapple.language.services.DNLanguageGrammarAccess;

}

@parser::members {

 	private DNLanguageGrammarAccess grammarAccess;
 	
    public InternalDNLanguageParser(TokenStream input, DNLanguageGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "DataflowSystem";	
   	}
   	
   	@Override
   	protected DNLanguageGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleDataflowSystem
entryRuleDataflowSystem returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataflowSystemRule()); }
	 iv_ruleDataflowSystem=ruleDataflowSystem 
	 { $current=$iv_ruleDataflowSystem.current; } 
	 EOF 
;

// Rule DataflowSystem
ruleDataflowSystem returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='DataflowSystem' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getDataflowSystemAccess().getDataflowSystemKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getDataflowSystemAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='protocol' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataflowSystemAccess().getProtocolKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getProtocolProtocolEnumRuleCall_4_0()); 
	    }
		lv_protocol_4_0=ruleProtocol		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		set(
       			$current, 
       			"protocol",
        		lv_protocol_4_0, 
        		"Protocol");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5='types' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataflowSystemAccess().getTypesKeyword_5_0());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getDataflowSystemAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getTypesTypeParserRuleCall_5_2_0()); 
	    }
		lv_types_7_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_7_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getDataflowSystemAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getTypesTypeParserRuleCall_5_3_1_0()); 
	    }
		lv_types_9_0=ruleType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		add(
       			$current, 
       			"types",
        		lv_types_9_0, 
        		"Type");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDataflowSystemAccess().getRightCurlyBracketKeyword_5_4());
    }
)?	otherlv_11='nets' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDataflowSystemAccess().getNetsKeyword_6());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getDataflowSystemAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getNetsDataflowNetParserRuleCall_8_0()); 
	    }
		lv_nets_13_0=ruleDataflowNet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		add(
       			$current, 
       			"nets",
        		lv_nets_13_0, 
        		"DataflowNet");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getDataflowSystemAccess().getCommaKeyword_9_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getNetsDataflowNetParserRuleCall_9_1_0()); 
	    }
		lv_nets_15_0=ruleDataflowNet		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		add(
       			$current, 
       			"nets",
        		lv_nets_15_0, 
        		"DataflowNet");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDataflowSystemAccess().getRightCurlyBracketKeyword_10());
    }
(	otherlv_17='channels' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getDataflowSystemAccess().getChannelsKeyword_11_0());
    }
	otherlv_18='{' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDataflowSystemAccess().getLeftCurlyBracketKeyword_11_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getChannelsChannelParserRuleCall_11_2_0()); 
	    }
		lv_channels_19_0=ruleChannel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		add(
       			$current, 
       			"channels",
        		lv_channels_19_0, 
        		"Channel");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_20=',' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getDataflowSystemAccess().getCommaKeyword_11_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getChannelsChannelParserRuleCall_11_3_1_0()); 
	    }
		lv_channels_21_0=ruleChannel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		add(
       			$current, 
       			"channels",
        		lv_channels_21_0, 
        		"Channel");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_22='}' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getDataflowSystemAccess().getRightCurlyBracketKeyword_11_4());
    }
)?	otherlv_23='processes' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getDataflowSystemAccess().getProcessesKeyword_12());
    }
	otherlv_24='{' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getDataflowSystemAccess().getLeftCurlyBracketKeyword_13());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getProcessesProcessParserRuleCall_14_0()); 
	    }
		lv_processes_25_0=ruleProcess		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		add(
       			$current, 
       			"processes",
        		lv_processes_25_0, 
        		"Process");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_26=',' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getDataflowSystemAccess().getCommaKeyword_15_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowSystemAccess().getProcessesProcessParserRuleCall_15_1_0()); 
	    }
		lv_processes_27_0=ruleProcess		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowSystemRule());
	        }
       		add(
       			$current, 
       			"processes",
        		lv_processes_27_0, 
        		"Process");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_28='}' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getDataflowSystemAccess().getRightCurlyBracketKeyword_16());
    }
	otherlv_29='}' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getDataflowSystemAccess().getRightCurlyBracketKeyword_17());
    }
)
;





// Entry rule entryRuleType
entryRuleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeRule()); }
	 iv_ruleType=ruleType 
	 { $current=$iv_ruleType.current; } 
	 EOF 
;

// Rule Type
ruleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getIntTypeParserRuleCall_0()); 
    }
    this_IntType_0=ruleIntType
    { 
        $current = $this_IntType_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getStringTypeParserRuleCall_1()); 
    }
    this_StringType_1=ruleStringType
    { 
        $current = $this_StringType_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getUserTypeParserRuleCall_2()); 
    }
    this_UserType_2=ruleUserType
    { 
        $current = $this_UserType_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getComplexTypeParserRuleCall_3()); 
    }
    this_ComplexType_3=ruleComplexType
    { 
        $current = $this_ComplexType_3.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getDoubleTypeParserRuleCall_4()); 
    }
    this_DoubleType_4=ruleDoubleType
    { 
        $current = $this_DoubleType_4.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getTypeAccess().getBoolTypeParserRuleCall_5()); 
    }
    this_BoolType_5=ruleBoolType
    { 
        $current = $this_BoolType_5.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleNode
entryRuleNode returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNodeRule()); }
	 iv_ruleNode=ruleNode 
	 { $current=$iv_ruleNode.current; } 
	 EOF 
;

// Rule Node
ruleNode returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getNodeAccess().getStateMachineParserRuleCall_0()); 
    }
    this_StateMachine_0=ruleStateMachine
    { 
        $current = $this_StateMachine_0.current; 
        afterParserOrEnumRuleCall();
    }

    |
    { 
        newCompositeNode(grammarAccess.getNodeAccess().getDataflowNetParserRuleCall_1()); 
    }
    this_DataflowNet_1=ruleDataflowNet
    { 
        $current = $this_DataflowNet_1.current; 
        afterParserOrEnumRuleCall();
    }
)
;







// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEStringRule()); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_ID_1=RULE_ID    {
		$current.merge(this_ID_1);
    }

    { 
    newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleDataflowNet
entryRuleDataflowNet returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDataflowNetRule()); }
	 iv_ruleDataflowNet=ruleDataflowNet 
	 { $current=$iv_ruleDataflowNet.current; } 
	 EOF 
;

// Rule DataflowNet
ruleDataflowNet returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDataflowNetAccess().getDataflowNetAction_0(),
            $current);
    }
)	otherlv_1='DataflowNet' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDataflowNetAccess().getDataflowNetKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowNetRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getDataflowNetAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='outputChannels' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getDataflowNetAccess().getOutputChannelsKeyword_4_0());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getDataflowNetAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataflowNetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getOutputChannelsChannelCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getDataflowNetAccess().getCommaKeyword_4_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataflowNetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getOutputChannelsChannelCrossReference_4_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getDataflowNetAccess().getRightParenthesisKeyword_4_4());
    }
)?(	otherlv_10='inputChannels' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getDataflowNetAccess().getInputChannelsKeyword_5_0());
    }
	otherlv_11='(' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getDataflowNetAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataflowNetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getInputChannelsChannelCrossReference_5_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getDataflowNetAccess().getCommaKeyword_5_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataflowNetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getInputChannelsChannelCrossReference_5_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15=')' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getDataflowNetAccess().getRightParenthesisKeyword_5_4());
    }
)?(	otherlv_16='process' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getDataflowNetAccess().getProcessKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getDataflowNetRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getProcessProcessCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))?(	otherlv_18='nodes' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getDataflowNetAccess().getNodesKeyword_7_0());
    }
	otherlv_19='{' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getDataflowNetAccess().getLeftCurlyBracketKeyword_7_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getNodesNodeParserRuleCall_7_2_0()); 
	    }
		lv_nodes_20_0=ruleNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowNetRule());
	        }
       		add(
       			$current, 
       			"nodes",
        		lv_nodes_20_0, 
        		"Node");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_21=',' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getDataflowNetAccess().getCommaKeyword_7_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getNodesNodeParserRuleCall_7_3_1_0()); 
	    }
		lv_nodes_22_0=ruleNode		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowNetRule());
	        }
       		add(
       			$current, 
       			"nodes",
        		lv_nodes_22_0, 
        		"Node");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_23='}' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getDataflowNetAccess().getRightCurlyBracketKeyword_7_4());
    }
)?(	otherlv_24='ownChannels' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getDataflowNetAccess().getOwnChannelsKeyword_8_0());
    }
	otherlv_25='{' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getDataflowNetAccess().getLeftCurlyBracketKeyword_8_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getOwnChannelsChannelParserRuleCall_8_2_0()); 
	    }
		lv_ownChannels_26_0=ruleChannel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowNetRule());
	        }
       		add(
       			$current, 
       			"ownChannels",
        		lv_ownChannels_26_0, 
        		"Channel");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_27=',' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getDataflowNetAccess().getCommaKeyword_8_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDataflowNetAccess().getOwnChannelsChannelParserRuleCall_8_3_1_0()); 
	    }
		lv_ownChannels_28_0=ruleChannel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDataflowNetRule());
	        }
       		add(
       			$current, 
       			"ownChannels",
        		lv_ownChannels_28_0, 
        		"Channel");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_29='}' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getDataflowNetAccess().getRightCurlyBracketKeyword_8_4());
    }
)?	otherlv_30='}' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getDataflowNetAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleChannel
entryRuleChannel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getChannelRule()); }
	 iv_ruleChannel=ruleChannel 
	 { $current=$iv_ruleChannel.current; } 
	 EOF 
;

// Rule Channel
ruleChannel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Channel' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getChannelAccess().getChannelKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getChannelAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getChannelRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getChannelAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='type' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getChannelAccess().getTypeKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getChannelRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getChannelAccess().getTypeTypeCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getChannelAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleProcess
entryRuleProcess returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProcessRule()); }
	 iv_ruleProcess=ruleProcess 
	 { $current=$iv_ruleProcess.current; } 
	 EOF 
;

// Rule Process
ruleProcess returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Process' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getProcessAccess().getProcessKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getProcessAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='host' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getProcessAccess().getHostKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getProcessAccess().getHostEStringParserRuleCall_4_0()); 
	    }
		lv_host_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getProcessRule());
	        }
       		set(
       			$current, 
       			"host",
        		lv_host_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='}' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getProcessAccess().getRightCurlyBracketKeyword_5());
    }
)
;





// Entry rule entryRuleIntType
entryRuleIntType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getIntTypeRule()); }
	 iv_ruleIntType=ruleIntType 
	 { $current=$iv_ruleIntType.current; } 
	 EOF 
;

// Rule IntType
ruleIntType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getIntTypeAccess().getIntTypeAction_0(),
            $current);
    }
)	otherlv_1='IntType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getIntTypeAccess().getIntTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getIntTypeAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStringType
entryRuleStringType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStringTypeRule()); }
	 iv_ruleStringType=ruleStringType 
	 { $current=$iv_ruleStringType.current; } 
	 EOF 
;

// Rule StringType
ruleStringType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStringTypeAccess().getStringTypeAction_0(),
            $current);
    }
)	otherlv_1='StringType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStringTypeAccess().getStringTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringTypeAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleUserType
entryRuleUserType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getUserTypeRule()); }
	 iv_ruleUserType=ruleUserType 
	 { $current=$iv_ruleUserType.current; } 
	 EOF 
;

// Rule UserType
ruleUserType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='UserType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getUserTypeAccess().getUserTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserTypeAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getUserTypeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='domain' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getUserTypeAccess().getDomainKeyword_3());
    }
	otherlv_4='{' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getUserTypeAccess().getLeftCurlyBracketKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserTypeAccess().getDomainEStringParserRuleCall_5_0()); 
	    }
		lv_domain_5_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserTypeRule());
	        }
       		add(
       			$current, 
       			"domain",
        		lv_domain_5_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getUserTypeAccess().getCommaKeyword_6_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getUserTypeAccess().getDomainEStringParserRuleCall_6_1_0()); 
	    }
		lv_domain_7_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUserTypeRule());
	        }
       		add(
       			$current, 
       			"domain",
        		lv_domain_7_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8='}' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getUserTypeAccess().getRightCurlyBracketKeyword_7());
    }
	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getUserTypeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleComplexType
entryRuleComplexType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getComplexTypeRule()); }
	 iv_ruleComplexType=ruleComplexType 
	 { $current=$iv_ruleComplexType.current; } 
	 EOF 
;

// Rule ComplexType
ruleComplexType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='ComplexType' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getComplexTypeAccess().getComplexTypeKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getComplexTypeAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getComplexTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getComplexTypeAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='containedTypes' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getComplexTypeAccess().getContainedTypesKeyword_3());
    }
	otherlv_4='(' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getComplexTypeAccess().getLeftParenthesisKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComplexTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getComplexTypeAccess().getContainedTypesSimpleTypeCrossReference_5_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_6=',' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getComplexTypeAccess().getCommaKeyword_6_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComplexTypeRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getComplexTypeAccess().getContainedTypesSimpleTypeCrossReference_6_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_8=')' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getComplexTypeAccess().getRightParenthesisKeyword_7());
    }
	otherlv_9='}' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getComplexTypeAccess().getRightCurlyBracketKeyword_8());
    }
)
;





// Entry rule entryRuleDoubleType
entryRuleDoubleType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleTypeRule()); }
	 iv_ruleDoubleType=ruleDoubleType 
	 { $current=$iv_ruleDoubleType.current; } 
	 EOF 
;

// Rule DoubleType
ruleDoubleType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getDoubleTypeAccess().getDoubleTypeAction_0(),
            $current);
    }
)	otherlv_1='DoubleType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getDoubleTypeAccess().getDoubleTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getDoubleTypeAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getDoubleTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleBoolType
entryRuleBoolType returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getBoolTypeRule()); }
	 iv_ruleBoolType=ruleBoolType 
	 { $current=$iv_ruleBoolType.current; } 
	 EOF 
;

// Rule BoolType
ruleBoolType returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getBoolTypeAccess().getBoolTypeAction_0(),
            $current);
    }
)	otherlv_1='BoolType' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getBoolTypeAccess().getBoolTypeKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getBoolTypeAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getBoolTypeRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleStateMachine
entryRuleStateMachine returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineRule()); }
	 iv_ruleStateMachine=ruleStateMachine 
	 { $current=$iv_ruleStateMachine.current; } 
	 EOF 
;

// Rule StateMachine
ruleStateMachine returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='StateMachine' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStateMachineAccess().getStateMachineKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='initialState' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateMachineAccess().getInitialStateKeyword_3());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getInitialStateStateMachineStateCrossReference_4_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='nodes' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateMachineAccess().getNodesKeyword_5());
    }
	otherlv_6='{' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_6());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getNodesStateMachineStateParserRuleCall_7_0()); 
	    }
		lv_nodes_7_0=ruleStateMachineState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"nodes",
        		lv_nodes_7_0, 
        		"StateMachineState");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_8=',' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStateMachineAccess().getCommaKeyword_8_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getNodesStateMachineStateParserRuleCall_8_1_0()); 
	    }
		lv_nodes_9_0=ruleStateMachineState		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"nodes",
        		lv_nodes_9_0, 
        		"StateMachineState");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_9());
    }
(	otherlv_11='firingRules' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStateMachineAccess().getFiringRulesKeyword_10_0());
    }
	otherlv_12='{' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getStateMachineAccess().getLeftCurlyBracketKeyword_10_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getFiringRulesFiringRuleParserRuleCall_10_2_0()); 
	    }
		lv_firingRules_13_0=ruleFiringRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"firingRules",
        		lv_firingRules_13_0, 
        		"FiringRule");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_14=',' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getStateMachineAccess().getCommaKeyword_10_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineAccess().getFiringRulesFiringRuleParserRuleCall_10_3_1_0()); 
	    }
		lv_firingRules_15_0=ruleFiringRule		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineRule());
	        }
       		add(
       			$current, 
       			"firingRules",
        		lv_firingRules_15_0, 
        		"FiringRule");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_10_4());
    }
)?	otherlv_17='}' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getStateMachineAccess().getRightCurlyBracketKeyword_11());
    }
)
;





// Entry rule entryRuleStateMachineState
entryRuleStateMachineState returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineStateRule()); }
	 iv_ruleStateMachineState=ruleStateMachineState 
	 { $current=$iv_ruleStateMachineState.current; } 
	 EOF 
;

// Rule StateMachineState
ruleStateMachineState returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
    {
        $current = forceCreateModelElement(
            grammarAccess.getStateMachineStateAccess().getStateMachineStateAction_0(),
            $current);
    }
)	otherlv_1='StateMachineState' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getStateMachineStateAccess().getStateMachineStateKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineStateAccess().getNameEStringParserRuleCall_2_0()); 
	    }
		lv_name_2_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineStateRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateMachineStateAccess().getLeftCurlyBracketKeyword_3());
    }
(	otherlv_4='inputTransitions' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getStateMachineStateAccess().getInputTransitionsKeyword_4_0());
    }
	otherlv_5='(' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateMachineStateAccess().getLeftParenthesisKeyword_4_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineStateRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineStateAccess().getInputTransitionsStateMachineTransitionCrossReference_4_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7=',' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateMachineStateAccess().getCommaKeyword_4_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineStateRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineStateAccess().getInputTransitionsStateMachineTransitionCrossReference_4_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getStateMachineStateAccess().getRightParenthesisKeyword_4_4());
    }
)?(	otherlv_10='outputTransitions' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStateMachineStateAccess().getOutputTransitionsKeyword_5_0());
    }
	otherlv_11='{' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getStateMachineStateAccess().getLeftCurlyBracketKeyword_5_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineStateAccess().getOutputTransitionsStateMachineTransitionParserRuleCall_5_2_0()); 
	    }
		lv_outputTransitions_12_0=ruleStateMachineTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineStateRule());
	        }
       		add(
       			$current, 
       			"outputTransitions",
        		lv_outputTransitions_12_0, 
        		"StateMachineTransition");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_13=',' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStateMachineStateAccess().getCommaKeyword_5_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineStateAccess().getOutputTransitionsStateMachineTransitionParserRuleCall_5_3_1_0()); 
	    }
		lv_outputTransitions_14_0=ruleStateMachineTransition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineStateRule());
	        }
       		add(
       			$current, 
       			"outputTransitions",
        		lv_outputTransitions_14_0, 
        		"StateMachineTransition");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_15='}' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getStateMachineStateAccess().getRightCurlyBracketKeyword_5_4());
    }
)?	otherlv_16='}' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStateMachineStateAccess().getRightCurlyBracketKeyword_6());
    }
)
;





// Entry rule entryRuleFiringRule
entryRuleFiringRule returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFiringRuleRule()); }
	 iv_ruleFiringRule=ruleFiringRule 
	 { $current=$iv_ruleFiringRule.current; } 
	 EOF 
;

// Rule FiringRule
ruleFiringRule returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='FiringRule' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getFiringRuleAccess().getFiringRuleKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFiringRuleAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFiringRuleRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getFiringRuleAccess().getLeftCurlyBracketKeyword_2());
    }
(	otherlv_3='compType' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFiringRuleAccess().getCompTypeKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFiringRuleAccess().getCompTypeComparationEnumRuleCall_3_1_0()); 
	    }
		lv_compType_4_0=ruleComparation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFiringRuleRule());
	        }
       		set(
       			$current, 
       			"compType",
        		lv_compType_4_0, 
        		"Comparation");
	        afterParserOrEnumRuleCall();
	    }

)
))?	otherlv_5='channel' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getFiringRuleAccess().getChannelKeyword_4());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFiringRuleRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getFiringRuleAccess().getChannelChannelCrossReference_5_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_7='tokens' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFiringRuleAccess().getTokensKeyword_6());
    }
	otherlv_8='{' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFiringRuleAccess().getLeftCurlyBracketKeyword_7());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFiringRuleAccess().getTokensTokenParserRuleCall_8_0()); 
	    }
		lv_tokens_9_0=ruleToken		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFiringRuleRule());
	        }
       		set(
       			$current, 
       			"tokens",
        		lv_tokens_9_0, 
        		"Token");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getFiringRuleAccess().getRightCurlyBracketKeyword_9());
    }
	otherlv_11='}' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getFiringRuleAccess().getRightCurlyBracketKeyword_10());
    }
)
;





// Entry rule entryRuleStateMachineTransition
entryRuleStateMachineTransition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getStateMachineTransitionRule()); }
	 iv_ruleStateMachineTransition=ruleStateMachineTransition 
	 { $current=$iv_ruleStateMachineTransition.current; } 
	 EOF 
;

// Rule StateMachineTransition
ruleStateMachineTransition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='StateMachineTransition' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getStateMachineTransitionAccess().getStateMachineTransitionKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineTransitionAccess().getNameEStringParserRuleCall_1_0()); 
	    }
		lv_name_1_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineTransitionRule());
	        }
       		set(
       			$current, 
       			"name",
        		lv_name_1_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_2='{' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getStateMachineTransitionAccess().getLeftCurlyBracketKeyword_2());
    }
	otherlv_3='priority' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getStateMachineTransitionAccess().getPriorityKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getStateMachineTransitionAccess().getPriorityEIntParserRuleCall_4_0()); 
	    }
		lv_priority_4_0=ruleEInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStateMachineTransitionRule());
	        }
       		set(
       			$current, 
       			"priority",
        		lv_priority_4_0, 
        		"EInt");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_5='toState' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getStateMachineTransitionAccess().getToStateKeyword_5());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineTransitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineTransitionAccess().getToStateStateMachineStateCrossReference_6_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_7='inputs' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getStateMachineTransitionAccess().getInputsKeyword_7_0());
    }
	otherlv_8='(' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getStateMachineTransitionAccess().getLeftParenthesisKeyword_7_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineTransitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineTransitionAccess().getInputsFiringRuleCrossReference_7_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_10=',' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getStateMachineTransitionAccess().getCommaKeyword_7_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineTransitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineTransitionAccess().getInputsFiringRuleCrossReference_7_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_12=')' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getStateMachineTransitionAccess().getRightParenthesisKeyword_7_4());
    }
)?(	otherlv_13='outputs' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getStateMachineTransitionAccess().getOutputsKeyword_8_0());
    }
	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getStateMachineTransitionAccess().getLeftParenthesisKeyword_8_1());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineTransitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineTransitionAccess().getOutputsFiringRuleCrossReference_8_2_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_16=',' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getStateMachineTransitionAccess().getCommaKeyword_8_3_0());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getStateMachineTransitionRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getStateMachineTransitionAccess().getOutputsFiringRuleCrossReference_8_3_1_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_18=')' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getStateMachineTransitionAccess().getRightParenthesisKeyword_8_4());
    }
)?	otherlv_19='}' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getStateMachineTransitionAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getEIntRule()); } 
	 iv_ruleEInt=ruleEInt 
	 { $current=$iv_ruleEInt.current.getText(); }  
	 EOF 
;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); 
    }
)?    this_INT_1=RULE_INT    {
		$current.merge(this_INT_1);
    }

    { 
    newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleToken
entryRuleToken returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTokenRule()); }
	 iv_ruleToken=ruleToken 
	 { $current=$iv_ruleToken.current; } 
	 EOF 
;

// Rule Token
ruleToken returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(	otherlv_0='Token' 
    {
    	newLeafNode(otherlv_0, grammarAccess.getTokenAccess().getTokenKeyword_0());
    }
	otherlv_1='{' 
    {
    	newLeafNode(otherlv_1, grammarAccess.getTokenAccess().getLeftCurlyBracketKeyword_1());
    }
	otherlv_2='value' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getTokenAccess().getValueKeyword_2());
    }
	otherlv_3='{' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getTokenAccess().getLeftCurlyBracketKeyword_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTokenAccess().getValueEStringParserRuleCall_4_0()); 
	    }
		lv_value_4_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTokenRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_4_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_5=',' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getTokenAccess().getCommaKeyword_5_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getTokenAccess().getValueEStringParserRuleCall_5_1_0()); 
	    }
		lv_value_6_0=ruleEString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTokenRule());
	        }
       		add(
       			$current, 
       			"value",
        		lv_value_6_0, 
        		"EString");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_7='}' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getTokenAccess().getRightCurlyBracketKeyword_6());
    }
	otherlv_8='type' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getTokenAccess().getTypeKeyword_7());
    }
(
(
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTokenRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTokenAccess().getTypeTypeCrossReference_8_0()); 
	    }
		ruleEString		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_10='}' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getTokenAccess().getRightCurlyBracketKeyword_9());
    }
)
;





// Rule Protocol
ruleProtocol returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Paho' 
	{
        $current = grammarAccess.getProtocolAccess().getPahoEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getProtocolAccess().getPahoEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='Akka' 
	{
        $current = grammarAccess.getProtocolAccess().getAkkaEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getProtocolAccess().getAkkaEnumLiteralDeclaration_1()); 
    }
));



// Rule Comparation
ruleComparation returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='Equal' 
	{
        $current = grammarAccess.getComparationAccess().getEqualEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getComparationAccess().getEqualEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='NotEqual' 
	{
        $current = grammarAccess.getComparationAccess().getNotEqualEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getComparationAccess().getNotEqualEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='Less' 
	{
        $current = grammarAccess.getComparationAccess().getLessEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getComparationAccess().getLessEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='Greater' 
	{
        $current = grammarAccess.getComparationAccess().getGreaterEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getComparationAccess().getGreaterEnumLiteralDeclaration_3()); 
    }
));



RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


